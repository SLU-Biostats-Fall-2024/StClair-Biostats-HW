---
title: "Homework-28"
format: html
---

```{r}
rm(list=ls())
```

```{r}
library(here)
library(readr)
library(tidyverse)
library(gridExtra)
compensation<- read.csv(here("Data", "compensation.csv"))
```

```{r}
#base scatterplot
eg_scatter<- ggplot(data= compensation, aes(x = Root, y = Fruit))+
  geom_point()

eg_scatter + theme_bw()
eg_scatter + axlab("Root Biomass") + ylab("Fruit Production") 
#or
eg_scatter +
  labs(title = "My useless title", x = "Root Biomass", y= "Fruit Production")

```
-`ylab()` and `xlab()` allow us to add axis titles can do all of this within `labs()`

```{r}
eg_scatter + xlim(0,20)+ ylim(0,140)
```
- `ylim()` and `ylim()()` allow you to change the ranges of x and y axis

```{r}
#base box and whisker plot
eg_box<- ggplot(data = compensation, aes(x = Grazing, y = Fruit))+
  geom_boxplot()
grid.arrange(eg_scatter, eg_box, nrow=1)
```

- `grid_arrange()` is a way to display graphs next to each other

```{r}
eg_scatter +
  annotate("text", x = c(6,8), y= c(105,25),
           label= c("Text up here ...", "... and text down here"))
```
- `annotate()` allows you to to put text on the graph itself

```{r}
eg_scatter + scale_x_continuous(limits =  c(4,11), breaks=4:11)
```
- `scale_x_continous()` allows you to set the limits for the x variable and set break between each of the numbers 4 through ll

```{r}
ggplot(data = compensation, aes(x= Root, y= Fruit, colour = Grazing))+
  geom_point()+
  scale_colour_manual(values = c(Grazed = "brown", Ungrazed = "green"))
```
- `scale_colour_manual()` allows you to allocate colors to points based on their membership of a group

```{r}
eg_box +
  scale_y_continuous(breaks = seq(from= 10, to= 150, by=20), trans = "log10")
```
- `scale_y_continuous()` using `trans()` can convert the axis to log10

```{r}
eg_scatter +
  theme(
    panel.background = element_rect(fill = NA, colour = "black"),
    panel.grid.minor = element_blank(),
    panel.grid.major = element_line(colour = "lightblue")
  )
```
- can use specifications within `theme()` to change the color of the grid, background, and paneling.

```{r}
eg_box+
  theme(
    axis.title.x = element_text(colour = "cornflowerblue",
                                size = rel(2)),
    axis.text.x = element_text(angle = 45, size = 13, vjust = 0.5)
  )
```
- `theme()` within this function you can edit the title; size, text, and angle

```{r}
eg_box +
  scale_x_discrete(limits = c("Ungrazed", "Grazed"),
                   labels= c("Control", "Grazed"))
```
- using `scale_x_discrete()` we can change the labels of discrete axes from the default use of the levels in the data frame to other names 

```{r}
ggplot(compensation, aes(x = Root, y = Fruit, colour = Grazing))+
  geom_point()+
  theme(legend.key = element_rect(fill= NA))
```
- using `legend.key()` within `theme()` we can get rid of the bounding grey box in the legend 

```{r}
ggplot(compensation, aes(x = Root, y = Fruit, colour = Grazing))+
  geom_point()+
  theme(legend.position = "none")

```
- can use `legend.position = "none"` within `theme()` to get rid of legend all together
